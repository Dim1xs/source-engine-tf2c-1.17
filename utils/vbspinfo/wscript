#! /usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'vbspinfo'

def options(opt):
	return

def configure(conf):
	conf.define('DONT_PROTECT_FILEIO_FUNCTIONS', 1)
	return

def build(bld):
	if bld.env.DEST_OS == 'android':
		return

	source = [
		"../common/bsplib.cpp",
		"../common/cmdlib.cpp",
		"../../public/filesystem_helpers.cpp",
		"../../public/filesystem_init.cpp",
		"../common/filesystem_tools.cpp",
		"../../public/lumpfiles.cpp",
		"../common/scriplib.cpp",
		"vbspinfo.cpp",
		"../../public/zip_utils.cpp",
		"../../filesystem/linux_support.cpp"
	]

	if bld.env.DEST_OS == "win32":
		source += [
			"../common/tools_minidump.cpp",
			"../../public/scratchpad3d.cpp"
		]

	includes = [
		".",
		"../common",
		"../../public",
		"../../public/tier0",
		"../../public/tier1",
		"../../public/tier2",
		"../../public/mathlib",
	]

	defines = [
	]

	libs = [
		"vstdlib",
		"tier0",
		"tier1",
		"tier2",
		"tier3",
		"mathlib",
		"lzma"
	]

	install_path = bld.env.BINDIR

	bld(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c cxx cxxprogram',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)

