#! /usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'discord-rpc'

def options(opt):
	return

def configure(conf):
	return

def build(bld):
	source = [
		'discord_rpc.cpp',
		'rpc_connection.cpp',
		'serialization.cpp',
	]

	includes = [
		'.',
		'./include',
		'./rapidjson-include',
		'../public'
	]

	defines = [
		'DISCORD_DYNAMIC_LIB',
		'DISCORD_BUILDING_SDK'
#		'DISCORD_DISABLE_IO_THREAD'
	]

	libs = []

	if bld.env.DEST_OS == "win32":
		source += [
			"connection_win.cpp",
			"discord_register_win.cpp"
		]
		defines += ["DISCORD_WINDOWS"]
		libs += ["KERNEL32", "USER32", "ADVAPI32"]
	elif bld.env.DEST_OS == "linux":
		source += [
			'connection_unix.cpp',
			'discord_register_linux.cpp'
		]
		defines += ["DISCORD_LINUX"]
		libs += ['DL', 'M', 'LOG']

	install_path = bld.env.LIBDIR

	bld.shlib(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)

